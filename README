"fast fast quick": a personal wiki
wiki web with editing history



~ uri interface ~


The address paths are designed to be
easy to type, and after a minimal amount
of acclimation, easy to remember. To
this end, I use ``sigil'' prefixes
instead of the ``pretty'' or ``rest''
like paths common today.

/         list all pages
/folder/  list pages in a folder
/page     view a page
/page~10  view a revision
/page~    list all revisions
/:page    edit a page
/!page    delete a page
/=        login
/=page    login, redirecting to a page
/-        logout

Adding users is done with the
``add_user'' tool.



~ folder structure ~


Internally, we have a simple way to
store pages and their revisions.  If a
page called ``test'' is saved, and it is
the 4th revision, we first look in
``pages/test'', which contains the
revision number 4, and then use that to
form the path ``revs/test~4''

pages/test --> revs/test~4

And so, this is the folder structure
used to house pages.

pages/
revs/

The rest of the internal folder
structure is the following, and mostly
explains itself.

templates/
conf/
  private - all pages require login if exists
  host - domain and port for http
  title - human-readable title for the wiki
  user.bob - user password/access
bin/



~ data format ~


Pages are formatted using markdown, with
``github style'' checkboxes/todos added.
Metadata and user format aren't worth
documenting here. They are both very
simple, and at the same time ``internal''
enough that, if you really need to know,
just look at the files or the source.

You can ``fave'' a page by making it's 
path start with #



~ possible future additions ~


I have considered making todos or tasks
first-class citizens in ffq, and making
it so that you can list and sort them
separately from the pages they inhabit,
in a way similar to OmniFocus or
Remember The Milk, since I tend to use
ffq as an personal organizer. Another
additions could be image or attachment
support / management. Not for full
``photo library'' use but just as
support for the wiki pages.



~ current tasks to be completed ~


-   ------------------------------------

x   basic page listing
x   list pages under a prefix
o   render a basic page/revision
x   utility functions for
    - toFilePath (like php ``filename()'')
    - toHumanPath (like php ``pagename()'')
    - toSlugPath
o   edit a page
o   delete a page
o   use markdown for the rendering
o   list all revisions
o   add_user utility
o   user login (a cookie consisting of
    login id and an hmac)
o   logout
o   match styling of error page to rest of ui
o   return 404, etc, vs just 500 on error
o   config for wiki name, host, and
    privacy settings
o   checkbox support (template, xmlhttprequest)
o   search (xmlhttprequest or websockets)
o   new ui with left sidebar
o   handle the archive/ prefix in a special way
   

-   ------------------------------------
